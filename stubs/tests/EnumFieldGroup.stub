<?php

/**
 * This file has been auto-amended.
 */

declare(strict_types=1);

namespace Foo\Bar\Baz;

use Foobar\ProjectNameSpace\Enums\FooBarField;
use Forme\Framework\Fields\FieldGroupInterface;

final class TestFieldGroup implements FieldGroupInterface
{
    public function add(): void
    {
        $variable = 'field_62c332ac9568t';
        acf_add_local_field_group([
            'key'    => 'group_62c3329e808ca',
            'title'  => 'Test Group',
            'fields' => [[
                'key'               => FooBarField::TEXT()->key,
                'label'             => FooBarField::TEXT()->label,
                'name'              => FooBarField::TEXT()->name,
                'type'              => 'text',
                'instructions'      => '',
                'required'          => 0,
                'conditional_logic' => 0,
                'wrapper'           => [
                    'width' => '',
                    'class' => '',
                    'id'    => ''
                ],
                'default_value' => '',
                'placeholder'   => '',
                'prepend'       => '',
                'append'        => '',
                'maxlength'     => ''
            ], [
                'key'               => FooBarField::NUMBER()->key,
                'label'             => FooBarField::NUMBER()->label,
                'name'              => FooBarField::NUMBER()->name,
                'type'              => 'number',
                'instructions'      => '',
                'required'          => 0,
                'conditional_logic' => 0,
                'wrapper'           => [
                    'width' => '',
                    'class' => '',
                    'id'    => ''
                ],
                'default_value' => '',
                'placeholder'   => '',
                'prepend'       => '',
                'append'        => '',
                'min'           => '',
                'max'           => '',
                'step'          => ''
            ], [
                'key'               => FooBarField::SELECT()->key,
                'label'             => FooBarField::SELECT()->label,
                'name'              => FooBarField::SELECT()->name,
                'type'              => 'select',
                'instructions'      => fn() => 'this still works with an arbitrary expression here',
                'required'          => 1,
                'conditional_logic' => 0,
                'wrapper'           => [
                    'width' => '',
                    'class' => '',
                    'id'    => ''
                ],
                'choices' => [
                    'foo: Foo' => 'foo: Foo',
                    'bar: Bar' => 'bar: Bar',
                    'baz: Baz' => 'baz: Baz'
                ],
                'default_value' => false,
                'allow_null'    => 0,
                'multiple'      => 0,
                'ui'            => 0,
                'return_format' => 'value',
                'ajax'          => 0,
                'placeholder'   => ''
            ], [
                'key'               => $variable,
                'label'             => 'Ignored',
                'name'              => 'ignored',
                'type'              => 'text',
                'instructions'      => 'This will get ignored because the key is an expression and is therefore not an enum candidate',
                'required'          => 0,
                'conditional_logic' => 0,
                'wrapper'           => [
                    'width' => '',
                    'class' => '',
                    'id'    => ''
                ],
                'default_value' => '',
                'placeholder'   => '',
                'prepend'       => '',
                'append'        => '',
                'maxlength'     => ''
            ]],
            'location' => [[[
                'param'    => 'post_type',
                'operator' => '==',
                'value'    => 'post'
            ]]],
            'menu_order'            => 0,
            'position'              => 'normal',
            'style'                 => 'default',
            'label_placement'       => 'top',
            'instruction_placement' => 'label',
            'hide_on_screen'        => '',
            'active'                => true,
            'description'           => '',
            'show_in_rest'          => 0
        ]);
    }
}
